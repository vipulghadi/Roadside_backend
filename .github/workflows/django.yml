name: Deploy Roadside Backend to AWS Lambda

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  PYTHON_VERSION: "3.12"

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        # Install requirements excluding the packages specified in zappa_settings
        pip install $(grep -v "boto3\|dateutil\|botocore\|s3transfer\|concurrent" requirements.txt)
        pip install zappa

    - name: Run Tests
      run: |
        python manage.py test

    - name: Create/Update Zappa Settings
      run: |
        echo '{
          "dev": {
            "aws_region": "ap-south-1",
            "django_settings": "Roadside_backend.settings",
            "exclude": [
              "boto3",
              "dateutil",
              "botocore",
              "s3transfer",
              "concurrent"
            ],
            "profile_name": "default",
            "project_name": "roadside-backen",
            "runtime": "python3.12",
            "s3_bucket": "roadside"
          }
        }' > zappa_settings.json

    - name: Deploy with Zappa
      run: |
        # Check if this is first deployment
        if ! zappa status dev 2>/dev/null; then
          zappa deploy dev
        else
          zappa update dev
        fi


    - name: Notify Deployment Status
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const { job, conclusion } = context;
          const status = conclusion === 'success' ? '✅ Success' : '❌ Failure';
          const message = `Deployment to AWS Lambda (dev) ${status}`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.name,
            body: message
          });
